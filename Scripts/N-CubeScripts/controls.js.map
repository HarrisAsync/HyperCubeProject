{"version":3,"sources":["../../src/scripts/controls.js"],"names":["CONTROLS","DOM","document","getElementById","init","forms","Object","keys","i","length","call","oninput","callback","bind","onchange","onsubmit","dimension","input","createElement","type","value","DIMENSION","children","appendChild","scaling","SCALING","step","speed","SPEED","distance","DISTANCE","isometric","checkbox","id","ISOMETRIC","checked","label","innerHTML","htmlFor","rotations","text","activeRotations","JSON","stringify","ROTATIONS","ALLROTATIONS","getAxisName","indexOf","parseInt","isNaN","Math","min","max","parseFloat","push"],"mappings":"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","file":"controls.js","sourcesContent":["/*\r\nNote: Every form is for ONE option\r\nthe form ID should match the initalizer CONTROLS.init.{name}\r\nand the oninput callback CONTROLS.callback.{name}\r\n*/\r\n\r\nfunction CONTROLS() {}\r\n\r\nCONTROLS.DOM = {\r\n\t// All the container form elements\r\n\t'forms': {\r\n\t\t'rotations': document.getElementById('rotations'),\r\n\t\t'dimension': document.getElementById('dimension'),\r\n\t\t'scaling': document.getElementById('scaling'),\r\n\t\t'isometric': document.getElementById('isometric'),\r\n\t\t'speed': document.getElementById('speed'),\r\n\t\t'distance': document.getElementById('distance'),\r\n\t},\r\n\t// The child values, for reference\r\n\t'children': {\r\n\t}\r\n}\r\n\r\n//\r\n// Initalization\r\n//\r\n\r\nCONTROLS.init = function() {\r\n\t/*\r\n\tNote: Looping through all the individual initializers to call them all\r\n\tAlso add the callbacks and disable form submission\r\n\t*/\r\n\r\n\tlet forms = Object.keys(this.init)\r\n\r\n\tfor (let i=0; i<forms.length; i++) {\r\n\t\tthis.init[forms[i]].call(this)\r\n\t\tthis.DOM.forms[forms[i]].oninput = this.callback[forms[i]].bind(this)\r\n\t\t// onchange is for the checkboxes on mobile touch devices\r\n\t\tthis.DOM.forms[forms[i]].onchange = this.callback[forms[i]].bind(this)\r\n\t\tthis.DOM.forms[forms[i]].onsubmit = function() { return false }\r\n\t}\r\n}\r\n\r\nCONTROLS.init.dimension = function() {\r\n\t/*\r\n\tNote: Create a number input for the dimension number\r\n\t*/\r\n\t\r\n\tlet input = document.createElement('input')\r\n\tinput.type = 'number'\r\n\tinput.value = DIMENSION\r\n\r\n\tthis.DOM.children.dimension = input\r\n\tthis.DOM.forms.dimension.appendChild(input)\r\n}\r\n\r\nCONTROLS.init.scaling = function() {\r\n\t/*\r\n\tNote: Create a number input for the scaling\r\n\t*/\r\n\t\r\n\tlet input = document.createElement('input')\r\n\tinput.type = 'number'\r\n\tinput.value = SCALING\r\n\tinput.step = 20\r\n\r\n\tthis.DOM.children.scaling = input\r\n\tthis.DOM.forms.scaling.appendChild(input)\r\n}\r\n\r\nCONTROLS.init.speed = function() {\r\n\t/*\r\n\tNote: Create a number input for the scaling\r\n\t*/\r\n\t\r\n\tlet input = document.createElement('input')\r\n\tinput.type = 'number'\r\n\tinput.value = SPEED\r\n\tinput.step = 0.001\r\n\r\n\tthis.DOM.children.speed = input\r\n\tthis.DOM.forms.speed.appendChild(input)\r\n}\r\n\r\nCONTROLS.init.distance = function() {\r\n\t/*\r\n\tNote: Create a number input for the scaling\r\n\t*/\r\n\t\r\n\tlet input = document.createElement('input')\r\n\tinput.type = 'number'\r\n\tinput.value = DISTANCE\r\n\tinput.step = 0.1\r\n\r\n\tthis.DOM.children.distance = input\r\n\tthis.DOM.forms.distance.appendChild(input)\r\n}\r\n\r\nCONTROLS.init.isometric = function() {\r\n\t/*\r\n\tNote: Create a checkbox input for the isometric projection\r\n\t*/\r\n\t\r\n\tlet checkbox = document.createElement('input')\r\n\tcheckbox.type = 'checkbox'\r\n\tcheckbox.id = 'isometric-checkbox'\r\n\tif (ISOMETRIC) {\r\n\t\tcheckbox.checked = true\r\n\t}\r\n\r\n\tlet label = document.createElement('label')\r\n\tlabel.innerHTML = '' // Adding content with CSS, boi\r\n\tlabel.htmlFor = 'isometric-checkbox'\r\n\r\n\tthis.DOM.children.isometric = checkbox\r\n\tthis.DOM.forms.isometric.appendChild(checkbox)\r\n\tthis.DOM.forms.isometric.appendChild(label)\r\n}\r\n\r\nCONTROLS.init.rotations = function() {\r\n\t/*\r\n\tNote: Here I'm creating the inputs for the rotation matrices\r\n\tThe checkboxes are in a form which gets triggered when any input changes\r\n\tI'm creating checkboxes + label then appending it to the form innerHTML\r\n\t*/\r\n\r\n\tlet checkbox, label, text\r\n\tlet activeRotations = JSON.stringify(ROTATIONS)\r\n\r\n\t// Reset the form\r\n\tthis.DOM.forms.rotations.innerHTML = ''\r\n\t// Reset the children\r\n\tthis.DOM.children.rotations = []\r\n\r\n\tfor (let i=0; i<ALLROTATIONS.length; i++) {\r\n\t\ttext = getAxisName(ALLROTATIONS[i][0]) + getAxisName(ALLROTATIONS[i][1])\r\n\r\n\t\tcheckbox = document.createElement('input')\r\n\t\tcheckbox.type = 'checkbox'\r\n\t\tcheckbox.id = text\r\n\t\t// Check if the rotation of the checkbox is active = present in ROTATIONS\r\n\t\tif (activeRotations.indexOf(JSON.stringify(ALLROTATIONS[i])) !== -1) {\r\n\t\t\tcheckbox.checked = true\r\n\t\t}\r\n\t\t\r\n\t\tlabel = document.createElement('label')\r\n\t\tlabel.htmlFor = text\r\n\t\tlabel.innerHTML = text\r\n\r\n\t\tthis.DOM.children.rotations[i] = checkbox\r\n\t\tthis.DOM.forms.rotations.appendChild(checkbox)\r\n\t\tthis.DOM.forms.rotations.appendChild(label)\r\n\t}\r\n}\r\n\r\n//\r\n// Callbacks\r\n//\r\n\r\nCONTROLS.callback = {}\r\n\r\nCONTROLS.callback.dimension = function() {\r\n\tlet value = parseInt(this.DOM.children.dimension.value)\r\n\r\n\t// If the value is not a number (NaN), quit\r\n\tif (isNaN(value)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Take the value and clamp it between [2, 10]\r\n\t// Dimension 10 has 1024 vertices, which is a lot\r\n\tvalue = Math.min(10, Math.max(2, value))\r\n\r\n\t// Ka-bam, reset everything\r\n\tDIMENSION = value\r\n\tROTATIONS = []\r\n\tinit()\r\n\t// Update the rotation options for the new dimension \r\n\tCONTROLS.init.rotations.call(this)\r\n}\r\n\r\nCONTROLS.callback.scaling = function() {\r\n\tlet value = parseFloat(this.DOM.children.scaling.value)\r\n\r\n\t// If the value is not a number (NaN), quit\r\n\tif (isNaN(value)) {\r\n\t\treturn false\r\n\t}\r\n\t\r\n\tSCALING = value\r\n}\r\n\r\nCONTROLS.callback.speed = function() {\r\n\tlet value = parseFloat(this.DOM.children.speed.value)\r\n\r\n\t// If the value is not a number (NaN), quit\r\n\tif (isNaN(value)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t\r\n\tSPEED = value\r\n}\r\n\r\nCONTROLS.callback.distance = function() {\r\n\tlet value = parseFloat(this.DOM.children.distance.value)\r\n\r\n\t// If the value is not a number (NaN), quit\r\n\tif (isNaN(value)) {\r\n\t\treturn false\r\n\t}\r\n\t\r\n\tDISTANCE = value\r\n}\r\n\r\nCONTROLS.callback.isometric = function() {\r\n\tISOMETRIC = this.DOM.children.isometric.checked\r\n}\r\n\r\nCONTROLS.callback.rotations = function() {\r\n\t/*\r\n\tNote: Here I'm looping through all the rotation checkboxes\r\n\tIf they are checked, add its rotation name (= elmt.value) to the global ROTATIONS variable\r\n\t*/\r\n\t\r\n\tROTATIONS = []\r\n\tlet checkbox\r\n\t\r\n\tfor (let i=0; i<this.DOM.children.rotations.length; i++) {\r\n\t\tcheckbox = this.DOM.children.rotations[i]\r\n\t\tif (checkbox.checked) {\r\n\t\t\tROTATIONS.push(ALLROTATIONS[i])\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//\r\n// Start everything\r\n//\r\n\r\nCONTROLS.init()\r\n"]}