{"version":3,"sources":["../../src/scripts/projection.js"],"names":["getProjectionMatrix","dimension","perspective","matrix","Matrix","identity","new","i"],"mappings":";;AAAA;AACA;AACA;;AAEA,SAASA,mBAAT,CAA6BC,SAA7B,EAAwCC,WAAxC,EAAqD;AACpD;;;;;;;;;;;;AAYA;;;;;;;;;AASA,KAAIC,eAAJ;;AAEA,KAAIF,cAAc,CAAlB,EAAqB;AACpBE,WAASC,OAAOC,QAAP,CAAgB,CAAhB,CAAT;AACA,EAFD,MAEO;AACNF,WAASC,OAAOE,GAAP,CAAWL,YAAU,CAArB,EAAwBA,SAAxB,CAAT;;AAEA,OAAK,IAAIM,IAAE,CAAX,EAAcA,IAAEN,YAAU,CAA1B,EAA6BM,GAA7B,EAAkC;AACjCJ,UAAOI,CAAP,EAAUA,CAAV,IAAeL,WAAf;AACA;AACD;;AAED,QAAOC,MAAP;AACA","file":"projection.js","sourcesContent":["//\r\n// Projection\r\n//\r\n\r\nfunction getProjectionMatrix(dimension, perspective) {\r\n\t/*\r\n\tReturn a simple projection matrix that depends on p (perspective)\r\n\t[p, 0, ..., 0, 0]\r\n\t[0, p, ..., 0, 0]\r\n\t[      ...      ]\r\n\t[0, 0, ..., p, 0]\r\n\t[0, 0, ..., 0, 0]\r\n\tBut we are excluding the last line because we want (x, y, z) --> (x, y) and not (x, y, 0)\r\n\tIf the dimension is 2, we don't need to project it to dimension 1 --> identity matix\r\n\tIf the dimension is 1, we need to project into 2 dimensions (add a dimension) --> [[1], [0]] matrix\r\n\t*/\r\n\r\n\t/*\r\n\tI won't need 1D projections because in draw.js projections only happen\r\n\tfor dimensions strictly higher than 2\r\n\tBut for reference purposes, here it is \r\n\tif (dimensions === 1) {\r\n\t\tmatrix = Matrix.from([[1], [0]])\r\n\t}\r\n\t*/\r\n\r\n\tlet matrix\r\n\r\n\tif (dimension === 2) {\r\n\t\tmatrix = Matrix.identity(2)\r\n\t} else {\r\n\t\tmatrix = Matrix.new(dimension-1, dimension)\r\n\r\n\t\tfor (let i=0; i<dimension-1; i++) {\r\n\t\t\tmatrix[i][i] = perspective\r\n\t\t}\r\n\t}\r\n\r\n\treturn matrix\r\n}"]}